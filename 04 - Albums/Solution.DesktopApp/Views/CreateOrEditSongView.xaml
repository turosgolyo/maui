<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:editors="clr-namespace:Syncfusion.Maui.Toolkit.NumericEntry;assembly=Syncfusion.Maui.Toolkit"
             xmlns:viewModels="clr-namespace:Solution.DesktopApp.ViewModels"
             xmlns:models="clr-namespace:Solution.Core.Models;assembly=Solution.Core"
             xmlns:sf="clr-namespace:Syncfusion.Maui.Toolkit.TextInputLayout;assembly=Syncfusion.Maui.Toolkit"
             xmlns:behaviors="clr-namespace:Solution.DesktopApp.Behaviors"
             xmlns:validator="clr-namespace:Solution.Validators;assembly=Solution.Validators"
             x:Class="Solution.DesktopApp.Views.CreateOrEditSongView"
             x:DataType="viewModels:CreateOrEditSongViewModel">

    <VerticalStackLayout>
        <Label Text="{Binding Title}" Style="{StaticResource PageTitle}" />


        <!-- name -->
        <sf:SfTextInputLayout 
                Hint="Song title"
                ContainerType="Outlined"
                OutlineCornerRadius="8"
                ErrorText="{
                        Binding ValidationResult,
                        Converter={StaticResource ValidationResultToErrorMessagesConverter},
                        ConverterParameter={x:Static validator:SongModelValidator.NameProperty}
                }"
                HasError="{
                        Binding ValidationResult,
                        Converter={StaticResource ValidationResultHasErrorConverter},
                        ConverterParameter={x:Static validator:SongModelValidator.NameProperty}
                }">

            <Entry Text="{Binding Name}">
                <Entry.Behaviors>
                    <toolkit:EventToCommandBehavior
                            EventName="TextChanged"
                            BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                            Command="{Binding ValidateCommand}"
                            CommandParameter="{x:Static validator:SongModelValidator.NameProperty}" />
                </Entry.Behaviors>
            </Entry>
        </sf:SfTextInputLayout>

        <!-- Artist -->
        <sf:SfTextInputLayout 
                 Hint="Artist"
                 ContainerType="Outlined"
                 OutlineCornerRadius="8"
                 ErrorText="{
                             Binding ValidationResult,
                             Converter={StaticResource ValidationResultToErrorMessagesConverter},
                             ConverterParameter={x:Static validator:SongModelValidator.ArtistProperty}
                 }"
                 HasError="{
                             Binding ValidationResult,
                             Converter={StaticResource ValidationResultHasErrorConverter},
                             ConverterParameter={x:Static validator:SongModelValidator.ArtistProperty}
                 }">

            <Picker ItemsSource="{Binding Artists}"
                        ItemDisplayBinding="{Binding Name}"
                        SelectedItem="{Binding Artist}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                     BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                                     Command="{Binding ValidateCommand}"
                                                     CommandParameter="{x:Static validator:SongModelValidator.ArtistProperty}" />

                </Picker.Behaviors>
            </Picker>
        </sf:SfTextInputLayout>

        <!-- Album -->
        <sf:SfTextInputLayout 
         Hint="Album"
         ContainerType="Outlined"
         OutlineCornerRadius="8"
         ErrorText="{
                     Binding ValidationResult,
                     Converter={StaticResource ValidationResultToErrorMessagesConverter},
                     ConverterParameter={x:Static validator:SongModelValidator.AlbumProperty}
         }"
         HasError="{
                     Binding ValidationResult,
                     Converter={StaticResource ValidationResultHasErrorConverter},
                     ConverterParameter={x:Static validator:SongModelValidator.AlbumProperty}
         }">

            <Picker ItemsSource="{Binding Albums}"
                ItemDisplayBinding="{Binding Name}"
                SelectedItem="{Binding Album}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                             BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                                             Command="{Binding ValidateCommand}"
                                             CommandParameter="{x:Static validator:SongModelValidator.AlbumProperty}" />

                </Picker.Behaviors>
            </Picker>
        </sf:SfTextInputLayout>

        <!-- Duration -->
        <sf:SfTextInputLayout 
        Hint="Song duration"
        ContainerType="Outlined"
        OutlineCornerRadius="8"
        ErrorText="{
                Binding ValidationResult,
                Converter={StaticResource ValidationResultToErrorMessagesConverter},
                ConverterParameter={x:Static validator:SongModelValidator.DurationProperty}
        }"
        HasError="{
                Binding ValidationResult,
                Converter={StaticResource ValidationResultHasErrorConverter},
                ConverterParameter={x:Static validator:SongModelValidator.DurationProperty}
        }">

            <Entry Text="{Binding Duration}">
                <Entry.Behaviors>
                    <toolkit:EventToCommandBehavior
                            EventName="TextChanged"
                            BindingContext="{Binding Source={x:Reference this}, Path=BindingContext}"
                            Command="{Binding ValidateCommand}"
                            CommandParameter="{x:Static validator:SongModelValidator.DurationProperty}" />
                </Entry.Behaviors>
            </Entry>
        </sf:SfTextInputLayout>

        <Button Text="Submit" Command="{Binding SubmitCommand}" WidthRequest="250"/>
    </VerticalStackLayout>
</ContentPage>